{% extends 'base.html.twig' %}

{% block title %}Route Registration{% endblock %}

{% block body %}
    <section class="section-route-reg">
        {{ include('partials/nav.html.twig') }}
        <aside class="route-registration">
            <div class="route-registration__header">Užregistruok savo kelionės maršrutą!</div>
            {{ form_start(route_form, {'attr': {'class': 'route-registration__form'}}) }}
                <div class="form-group">
                    <div class="mdc-text-field username">
                        {{ form_widget(route_form.name) }}
                        <div class="mdc-line-ripple"></div>
                        <label class="mdc-floating-label">Vardas</label>
                    </div>
                    <div class="mdc-text-field age">
                        {{ form_widget(route_form.age) }}
                        <div class="mdc-line-ripple"></div>
                        <label class="mdc-floating-label">Amžius</label>
                    </div>
                </div>
            <div class="mdc-text-field phone">
                 {{ form_widget(route_form.phone) }}
                <div class="mdc-line-ripple"></div>
                <label class="mdc-floating-label">Telefono numeris</label>
            </div>
                <div class="mdc-text-field origin">
                    {{ form_widget(route_form.route.origin_input) }}
                    <div class="mdc-line-ripple"></div>
                    <label class="mdc-floating-label">Kelionės pradžia (tikslus adresas - kitiems nebus matomas)</label>
                </div>
                <div class="mdc-text-field destination">
                    {{ form_widget(route_form.route.destination_input) }}
                    <div class="mdc-line-ripple"></div>
                    <label class="mdc-floating-label">Kelionės tikslas (tikslus adresas - kitiems nebus matomas)</label>
                </div>
                <div>
                <div class="mdc-text-field mdc-text-field--outlined route-desc">
                    {{ form_widget(route_form.route_description) }}
                    <div class="mdc-notched-outline">
                        <div class="mdc-notched-outline__leading"></div>
                        <div class="mdc-notched-outline__notch">
                            <label for="tf-outlined" class="mdc-floating-label">Maršrutas (bus rodomas visiems)</label>
                        </div>
                        <div class="mdc-notched-outline__trailing"></div>

                    </div>
                </div>
                <div class="mdc-text-field-helper-line">
                    <div class="mdc-text-field-helper-text mdc-text-field-helper-text--persistent">Pvz. Važiuoju iš Raudondvario į Elektrėnų g. pro Vilijampolę</div>
                </div>
                </div>
                <div>
                <div class="mdc-text-field mdc-text-field--outlined time-desc">
                    {{ form_widget(route_form.description) }}
                    <div class="mdc-notched-outline">
                        <div class="mdc-notched-outline__leading"></div>
                        <div class="mdc-notched-outline__notch">
                            <label for="tf-outlined" class="mdc-floating-label">Kelionės laiko aprašymas</label>
                        </div>
                        <div class="mdc-notched-outline__trailing"></div>
                    </div>
                </div>
                <div class="mdc-text-field-helper-line">
                    <div class="mdc-text-field-helper-text mdc-text-field-helper-text--persistent">Pvz. dirbu pamainomos - vieną savaitę 6:00 - 14:30, kitą - 14:30 - 23:00</div>
                </div>
                </div>
                <div class="mdc-select role">
                    <i class="mdc-select__dropdown-icon"></i>
                    {{ form_widget(route_form.role) }}
{#                    <label class="mdc-floating-label">Rolė<br></label>#}
                    <div class="mdc-line-ripple"></div>
                </div>

                {{ form_widget(route_form.save) }}
            {{ form_end(route_form) }}
        </aside>
        <div id="map"></div>
    </section>
<script>
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            mapTypeControl: false,
            center: {lat: 54.897343, lng: 23.882552},
            zoom: 13
        });

        new AutocompleteDirectionsHandler(map);
    }

    /**
     * @constructor
     */
    function AutocompleteDirectionsHandler(map) {
        this.map = map;
        this.originPlaceId = null;
        this.destinationPlaceId = null;
        this.travelMode = 'DRIVING';
        this.directionsService = new google.maps.DirectionsService;
        this.directionsDisplay = new google.maps.DirectionsRenderer;
        this.directionsDisplay.setMap(map);

        var originInput = document.getElementById('route_register_route_origin_input');
        var destinationInput = document.getElementById('route_register_route_destination_input');


        var originAutocomplete = new google.maps.places.Autocomplete(originInput);
        // Specify just the place data fields that you need.
        originAutocomplete.setFields(['place_id']);

        var destinationAutocomplete =
            new google.maps.places.Autocomplete(destinationInput);
        // Specify just the place data fields that you need.
        destinationAutocomplete.setFields(['place_id']);

        this.setupPlaceChangedListener(originAutocomplete, 'ORIG');
        this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');

    }

    // Sets a listener on a radio button to change the filter type on Places
    // Autocomplete.
    AutocompleteDirectionsHandler.prototype.setupClickListener = function(
        id, mode) {
        var radioButton = document.getElementById(id);
        var me = this;

        radioButton.addEventListener('click', function() {
            me.travelMode = mode;
            me.route();
        });
    };

    AutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function(
        autocomplete, mode) {
        var me = this;
        autocomplete.bindTo('bounds', this.map);

        autocomplete.addListener('place_changed', function() {
            var place = autocomplete.getPlace();


            if (!place.place_id) {
                window.alert('Please select an option from the dropdown list.');
                return;
            }
            if (mode === 'ORIG') {
                me.originPlaceId = place.place_id;
                document.getElementById('route_register_route_home_location').value = place.place_id;


            } else {
                me.destinationPlaceId = place.place_id;
                document.getElementById('route_register_route_work_location').value = place.place_id;
            }
            me.route();
        });
    };

    AutocompleteDirectionsHandler.prototype.route = function() {
        if (!this.originPlaceId || !this.destinationPlaceId) {
            return;
        }
        var me = this;

        this.directionsService.route(
            {
                origin: {'placeId': this.originPlaceId},
                destination: {'placeId': this.destinationPlaceId},
                travelMode: this.travelMode
            },
            function(response, status) {
                if (status === 'OK') {
                    me.directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
    };

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAX-QC3A7Fn8_T76yNb-3JlyBfkl-NLc34&libraries=places&callback=initMap"
        async defer></script>



{% endblock %}
